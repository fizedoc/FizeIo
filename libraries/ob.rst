==================
缓冲区管理类
==================


+-------------+---------+
|属性         |值       |
+=============+=========+
|命名空间     |fize\\io |
+-------------+---------+
|类名         |Ob       |
+-------------+---------+


:方法:


+----------------------------+-------------------------------------------------------------------------------------+
|方法名                      |说明                                                                                 |
+============================+=====================================================================================+
|`clean()`_                  |丢弃输出缓冲区中的内容                                                               |
+----------------------------+-------------------------------------------------------------------------------------+
|`endClean()`_               |清空（擦除）缓冲区并关闭输出缓冲                                                     |
+----------------------------+-------------------------------------------------------------------------------------+
|`endFlush()`_               |输出缓冲区内容并关闭缓冲                                                             |
+----------------------------+-------------------------------------------------------------------------------------+
|`flush()`_                  |输出缓冲区中的内容                                                                   |
+----------------------------+-------------------------------------------------------------------------------------+
|`getClean()`_               |得到当前缓冲区的内容并删除当前输出缓冲区。                                           |
+----------------------------+-------------------------------------------------------------------------------------+
|`getContents()`_            |返回输出缓冲区的内容                                                                 |
+----------------------------+-------------------------------------------------------------------------------------+
|`getFlush()`_               |输出缓冲区内容，以字符串形式返回内容，并关闭输出缓冲区。                             |
+----------------------------+-------------------------------------------------------------------------------------+
|`getLength()`_              |返回输出缓冲区内容的长度                                                             |
+----------------------------+-------------------------------------------------------------------------------------+
|`getLevel()`_               |返回输出缓冲机制的嵌套级别                                                           |
+----------------------------+-------------------------------------------------------------------------------------+
|`getStatus()`_              |获取缓冲区的状态信息                                                                 |
+----------------------------+-------------------------------------------------------------------------------------+
|`gzhandler()`_              |在Ob::start()中使用的用来压缩输出缓冲区中内容的回调函数                              |
+----------------------------+-------------------------------------------------------------------------------------+
|`implicitFlush()`_          |打开/关闭绝对刷送                                                                    |
+----------------------------+-------------------------------------------------------------------------------------+
|`listHandlers()`_           |列出所有使用中的输出处理程序。                                                       |
+----------------------------+-------------------------------------------------------------------------------------+
|`start()`_                  |打开输出控制缓冲                                                                     |
+----------------------------+-------------------------------------------------------------------------------------+
|`outputAddRewriteVar()`_    |添加URL重写器的值                                                                    |
+----------------------------+-------------------------------------------------------------------------------------+
|`outputResetRewriteVars()`_ |重设URL重写器的值                                                                    |
+----------------------------+-------------------------------------------------------------------------------------+


方法
======
clean()
-------
丢弃输出缓冲区中的内容

.. code-block:: php

  public static function clean ()



::

    此方法不会销毁输出缓冲区


endClean()
----------
清空（擦除）缓冲区并关闭输出缓冲

.. code-block:: php

  public static function endClean () : bool


:返回值:
  成功时返回TRUE， 或者在失败时返回FALSE。


endFlush()
----------
输出缓冲区内容并关闭缓冲

.. code-block:: php

  public static function endFlush () : bool


:返回值:
  成功时返回TRUE， 或者在失败时返回FALSE。


flush()
-------
输出缓冲区中的内容

.. code-block:: php

  public static function flush ()



getClean()
----------
得到当前缓冲区的内容并删除当前输出缓冲区。

.. code-block:: php

  public static function getClean () : string


:返回值:
  当前缓冲区的内容


getContents()
-------------
返回输出缓冲区的内容

.. code-block:: php

  public static function getContents () : string


:返回值:
  如果输出缓冲区无效将返回FALSE。


getFlush()
----------
输出缓冲区内容，以字符串形式返回内容，并关闭输出缓冲区。

.. code-block:: php

  public static function getFlush () : string


:返回值:
  如果没有起作用的输出缓冲区，返回FALSE。


getLength()
-----------
返回输出缓冲区内容的长度

.. code-block:: php

  public static function getLength () : int



getLevel()
----------
返回输出缓冲机制的嵌套级别

.. code-block:: php

  public static function getLevel () : int


:返回值:
  如果输出缓冲区不起作用，返回0。


getStatus()
-----------
获取缓冲区的状态信息

.. code-block:: php

  public static function getStatus (
      bool $full_status = false
  ) : array


:参数:
  +------------+-------------------------------------------------+
  |名称        |说明                                             |
  +============+=================================================+
  |full_status |是否返回所有有效的输出缓冲级别。                 |
  +------------+-------------------------------------------------+
  
  


::

    返回最顶层输出缓冲区的状态信息；
    或者如果full_status设为TRUE，返回所有有效的输出缓冲级别。


gzhandler()
-----------
在Ob::start()中使用的用来压缩输出缓冲区中内容的回调函数

.. code-block:: php

  public static function gzhandler (
      string $buffer,
      int $mode
  ) : string


:参数:
  +-------+-------------------------+
  |名称   |说明                     |
  +=======+=========================+
  |buffer |待输出缓冲区内容         |
  +-------+-------------------------+
  |mode   |指定模式                 |
  +-------+-------------------------+
  
  

:返回值:
  如果一个浏览器不支持压缩过的页面，此函数返回FALSE。


::

    使用该方法必须启用 zlib 扩展


implicitFlush()
---------------
打开/关闭绝对刷送

.. code-block:: php

  public static function implicitFlush (
      bool $flag = true
  )


:参数:
  +-------+---------------------------------------------------+
  |名称   |说明                                               |
  +=======+===================================================+
  |flag   |设为TRUE 打开绝对刷送，反之是 FALSE。              |
  +-------+---------------------------------------------------+
  
  


::

    绝对（隐式）刷送将导致在每次输出调用后有一次刷送操作，以便不再需要对 flush() 的显式调用


listHandlers()
--------------
列出所有使用中的输出处理程序。

.. code-block:: php

  public static function listHandlers () : array



start()
-------
打开输出控制缓冲

.. code-block:: php

  public static function start (
      callable $output_callback = null,
      int $chunk_size = 0,
      bool $erase = true
  ) : bool


:参数:
  +----------------+-----------------------------------------------------------------------------------------+
  |名称            |说明                                                                                     |
  +================+=========================================================================================+
  |output_callback |缓冲区内容发生变化时的回调函数                                                           |
  +----------------+-----------------------------------------------------------------------------------------+
  |chunk_size      |缓冲区大小，默认0表示函数仅在最后被调用                                                  |
  +----------------+-----------------------------------------------------------------------------------------+
  |erase           |如果可选参数 erase 被赋成 FALSE，直到脚本执行完成缓冲区才被删除                          |
  +----------------+-----------------------------------------------------------------------------------------+
  
  


outputAddRewriteVar()
---------------------
添加URL重写器的值

.. code-block:: php

  public static function outputAddRewriteVar (
      string $name,
      string $value
  ) : bool


:参数:
  +-------+-------------+
  |名称   |说明         |
  +=======+=============+
  |name   |变量名。     |
  +-------+-------------+
  |value  |变量值。     |
  +-------+-------------+
  
  


outputResetRewriteVars()
------------------------
重设URL重写器的值

.. code-block:: php

  public static function outputResetRewriteVars () : bool



